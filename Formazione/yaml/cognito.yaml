Resources:
  CognitoUserPool:
    Type: "AWS::Cognito::UserPool"
    Properties:
      UserPoolName: pokedex
      Schema:
        - AttributeDataType: String
          Mutable: True
          Name: name
        - AttributeDataType: String
          Mutable: True
          Name: surname
      AutoVerifiedAttributes:
        - email
      UsernameAttributes: 
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          TemporaryPasswordValidityDays: 365
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true

  CognitoUserPoolClient:
    Type: "AWS::Cognito::UserPoolClient"
    Properties:
      ClientName: pokedex-webapp
      GenerateSecret: false
      UserPoolId: !Ref CognitoUserPool
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_CUSTOM_AUTH
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      AllowedOAuthFlows:
        - implicit
        - code
      AllowedOAuthScopes:
        - email
        - openid
        - profile
      SupportedIdentityProviders:
        - COGNITO
      CallbackURLs:
        - https://google.com
        - http://localhost:4200/login
      LogoutURLs:
        - http://localhost:4200/login
      AllowedOAuthFlowsUserPoolClient: true

  UserPoolDomain:
    Type: "AWS::Cognito::UserPoolDomain"
    Properties:
      Domain: pokedex-webapp-client
      UserPoolId: !Ref CognitoUserPool

  CognitoAdminGroup:
    Type: "AWS::Cognito::UserPoolGroup"
    Properties:
      Description: Admin cognito group
      GroupName: admin
      Precedence: 0
      UserPoolId: !Ref CognitoUserPool

  CognitoViewerGroup:
    Type: "AWS::Cognito::UserPoolGroup"
    Properties:
      Description: Viewer cognito group
      GroupName: viewer
      Precedence: 0
      UserPoolId: !Ref CognitoUserPool
